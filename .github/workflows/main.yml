name: CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      IMAGE: ghcr.io/${{ github.repository_owner }}/dotfiles
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:${{ github.sha }}
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}:laetst
        if: github.ref == 'refs/heads/main'

  format:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: lua
            cmd: |
              stylua --check -g '*.lua' -- config/{.config,.hammerspoon}
          - name: sh
            cmd: |
              shfmt -i 2 -d bin config/{.bin,.config/zsh} install
    name: format-${{ matrix.name }}
    steps:
      - uses: actions/checkout@v4
      - uses: aquaproj/aqua-installer@v3.1.1
        with:
          aqua_version: v2.43.0
      - run: ${{ matrix.cmd }}

  node-tools-lockfile:
    runs-on: ubuntu-latest
    env:
      WORK_DIR: config/.config/nvim/lua/plugins/lsp
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          package_json_file: ${{ env.WORK_DIR }}/package.json
          run_install: |
            cwd: ${{ env.WORK_DIR }}
            args: [--frozen-lockfile, --strict-peer-dependencies]
